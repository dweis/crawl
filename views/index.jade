style
  body { margin: 0; }
  #cr-stage { border-left-width:0; border-top-width:0; background-color: #111; }

script
  (function($){
    var viewportWidth = 24 // in cells(meters)
      , viewportHeight = 16 // in cells(meters)
      , tileWidth = 32 // in pixels
      , tileHeight = 32 // in pixels
      , mapWidth = 100
      , mapHeight = 100

    Crafty.init(viewportWidth * tileWidth, viewportHeight * tileHeight);

    Crafty.sprite(32, 'assets/tiles/grass-tiles-2-small.png', {
        grass0: [0, 0]
      , grass1: [1, 0]
      , grass2: [2, 0]
      , grass3: [3, 0]
      , grass4: [4, 0]
      , grass5: [5, 0]
      , grass6: [0, 1]
      , grass7: [0, 2]
      , grass8: [0, 3]
      , grass9: [0, 4] })

    var tiles = []

    for (var y = 0; y < mapHeight; y++)
      for (var x = 0; x < mapWidth; x++) {
        tiles[y * mapWidth + x] = Crafty.e('2D, Canvas, grass' + Crafty.randRange(0,5)).
            attr({ x: x * tileWidth, y: y * tileHeight, w: tileWidth, h: tileHeight })
      }

    Crafty.sprite(30, 'assets/sprites/sheets/spr_sheet_01.png', {
        skeleton: [8, 2]
      , ogre: [17, 4]
      , dragon: [9, 10]
      , goblin: [18, 1]
      , mole: [10, 1] })

    var player = Crafty.e('2D, Canvas, skeleton').
          attr({ x: viewportWidth / 2 * tileWidth
               , y: viewportHeight / 2 * tileHeight
               , w: tileWidth
               , h: tileHeight})

    var socket = io.connect('http://localhost')

    var currentX = -1, currentY = -1

    socket.on('view', function(view) {
      if (view.x != currentX || view.y != currentY) {
        var offsetX = -(view.x * tileWidth),
            offsetY = -(view.y * tileWidth)

        console.log(view.x, view.y, offsetX, offsetY);

        for (var y = 0; y < mapHeight; y++)
          for (var x = 0; x < mapWidth; x++)
            tiles[y * mapWidth + x].
                attr({ x: x * tileWidth + offsetX
                     , y: y * tileHeight + offsetY })
      }

      for (var y = 0; y < view.height; y++) {
        for (var x = 0; x < view.width; x++) {
          var data = view.cells[y * view.width + x]
          data.x = x
          data.y = y

          if (typeof data.symbol != 'undefined') {
            console.log(data)
          }
        }
      }
    })

  })(jQuery)
